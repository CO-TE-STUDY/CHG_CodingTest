#include <vector>
#include <iostream>
#include <algorithm>

using namespace std;

int dp[10001];
int main()
{
	int count, sum;
	cin >> count >> sum;

	//입력을 받으면서 동시에 진행. 굳이 코인 정보를 따로 저장할 필요가 없다.
	for (int i = 0; i < count; i++)
	{
		int coin;

		cin >> coin;
		
		if (coin > sum) continue;
		dp[coin]++;

		//입력받은 숫자부터 원하고 싶은 가치까지 계속 dp 배열을 갱신해준다.
		// 
		//예시: 코인은 9가 들어왔고 가치가 30인 상황에서 dp를 갱신하는 경우
		//dp[20] = dp[11] + dp[20] 의 뜻은 11을 수할 수 있는 경우의 수에 9를 한번만 더하면 20이 되므로 
		//20을 구할 수 있는 모든 경우의 수에 11을 구할 수 있는 경우의 수도 더하는 것이다. 
		//20을 구하는 데에 5가지의 경우의 수가 있고, 11을 구하는 데 3가지의 경우의 수가 있다면 
		//11+코인 = 20이므로 11의 경우의 수를 그대로 20에 적용이 가능하다는 원리.
		for (int j = coin; j <= sum; j++)
		{ 
			dp[j] += dp[j - coin];
		}

	}
	cout << dp[sum];


	return 0;
}
