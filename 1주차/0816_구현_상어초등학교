#include <stdio.h>
#include <iostream>

using namespace std;

struct STUDENT
{
	int me;
	int fri[4];
	int y, x;
};

int N;
int board[20][20];
STUDENT st[400];

int DirX[] = { 0, 1, 0, -1 };
int DirY[] = { -1, 0, 1, 0 };

int GetPoint(int y, int x, int s)
{
	int point = 0;

	for (int d = 0; d < 4; d++)
	{
		int ny = y + DirY[d];
		int nx = x + DirX[d];
		if(ny < 0 || ny >= N || nx < 0 || nx >= N)
		{
			continue;
		}	
		if (board[ny][nx] == 0)
		{
			point++;
		}
		else
		{
			for (int f = 0; f < 4; f++)
			{
				if (board[ny][nx] == st[s].fri[f])
				{
					point += 10;
				}
			}
		}
	}
	return point;
	
}

//매개변수 s: 학생 번호가 아니라 학생 구조체 배열의 인덱스이다.
void SetStudent(int y, int x, int s)
{
	st[s].y = y, st[s].x = x;
	board[y][x] = st[s].me;
}

int CalcPoint(int s)
{
	int point = 0;
	int y = st[s].y;
	int x = st[s].x;
	for (int d = 0; d < 4; d++)
	{
		int ny = y + DirY[d];
		int nx = x + DirX[d];
		if (ny < 0 || ny >= N || nx < 0 || nx >= N) continue;

		for (int f = 0; f < 4; f++)
		{
			if (board[ny][nx] == st[s].fri[f])
			{
				if (point == 0)
				{
					++point;
				}
				else
				{
					point *= 10;
				}
			}
		}
		
	}

	return point;
}
int main()
{
	scanf_s("%d", &N);
	for (int i = 0; i < N * N; i++)
	{
		//4번 학생을 4번자리에 저장해는게 아니라 0번째 입력이라면 구조체배열의 0번째자리의 학생 정보에 4를 저장한다.
		//이런식으로 정보를 저장해서 사용하는게 처음 보는 방법.
		scanf_s("%d %d %d %d %d", &st[i].me, &st[i].fri[0], &st[i].fri[1], &st[i].fri[2], &st[i].fri[3]);
	}

	for (int i = 0; i < N * N; i++)
	{
		int tmpY = -1, tmpX = -1, point = -1;

		//보드를 전부 한번씩 돌면서 제일 점수가 높은 자리를 찾기
		for (int y = 0; y < N; y++)
		{
			for (int x = 0; x < N; x++)
			{
				if (board[y][x] == 0)
				{
					int curPoint = GetPoint(y, x, i);
					//이 if문 하나면 되는걸 최대값 구하고 배열 엄청쓰고
					//전부 점수가 같으면 첫번째 자리에서 갱신이 안되니까 그게 이런식으로 구현이 됨.
					if (curPoint > point)
					{
						tmpY = y, tmpX = x, point = curPoint;
					}
				}
			}
		}
		SetStudent(tmpY, tmpX, i);

		

		
	}
	int ret = 0;

	for (int i = 0; i < N * N; i++)
	{
		ret += CalcPoint(i);
	}
	cout << ret;
}
