#include <iostream>
#include <algorithm>

using namespace std;

int dp[1000001];
int mainMakingOne()
{
	int n;
	cin >> n;

	dp[1] = 0;
	for (int i = 1; i <= n; i++)
	{
		if (dp[i] == 0) dp[i] = dp[i - 1] + 1;
		else dp[i] = min(dp[i], dp[i - 1] + 1);

		if (dp[i * 3] != 0) dp[i * 3] = min(dp[i * 3], dp[i] + 1);
		else dp[i * 3] = dp[i] + 1;

		if (dp[i * 2] != 0) dp[i * 2] = min(dp[i * 2], dp[i] + 1);
		else dp[i * 2] = dp[i] + 1;
		
	}
	cout << dp[n] - 1;
	return 0;
}
