#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>

using namespace std;

pair<int, int> arrLec[10001];

bool tmp(pair<int, int>& a, pair<int, int>& b)
{
	if (a.second > b.second)
	{
		return true;
	}
	else return false;
}

int main(void)
{
	int n;
	cin >> n;
	for (int i = 0; i < n; i++)
	{
		int a, b;
		cin >> a >> b;
		arrLec[i] = { a, b };

	}
	sort(arrLec, arrLec + n, tmp);

	int result = 0;

	priority_queue<int> q;
	int idx = 0;
	//아이디어: 하루를 기준이 아니라 arrLec을 기준으로 잡는거임.
	//는 아니고 그냥 뒤에서부터 가능한 강연들 큐에 추가하면서 최대값 넣으면 됨.
	for (int i = 10000; i > 0; i--)
	{
		while (idx < n && i <= arrLec[idx].second)
		{
			q.push(arrLec[idx].first);
			idx++;
		}
		if (!q.empty())
		{
			result += q.top();
			q.pop();
		}
	}
	cout << result;
	return 0;
}
